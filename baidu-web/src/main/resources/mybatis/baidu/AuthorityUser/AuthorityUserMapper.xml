<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baidu.house.sysmanager.dao.authorityuser.AuthorityUserMapper">
    <resultMap id="BaseResultMap" type="com.baidu.house.sysmanager.pojo.authorityuser.AuthorityUser">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="REMARK" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, USER_NAME, PASSWORD, PHONE, EMAIL, CREATE_TIME, UPDATE_TIME, REMARK
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_authority_user
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_authority_user
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.baidu.house.sysmanager.pojo.authorityuser.AuthorityUser">
    insert into t_authority_user (ID, USER_NAME, PASSWORD, 
      PHONE, EMAIL, CREATE_TIME, 
      UPDATE_TIME, REMARK)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.baidu.house.sysmanager.pojo.authorityuser.AuthorityUser">

        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>

        insert into t_authority_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userName != null">
                USER_NAME,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="email != null">
                EMAIL,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.baidu.house.sysmanager.pojo.authorityuser.AuthorityUser">
        update t_authority_user
        <set>
            <if test="userName != null">
                USER_NAME = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                PASSWORD = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                PHONE = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baidu.house.sysmanager.pojo.authorityuser.AuthorityUser">
    update t_authority_user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>


    <insert id="insertUserAndRole" parameterType="java.util.HashMap">
    insert into t_authority_user_role ( USER_ID,ROLE_ID)
    values (#{userId,jdbcType=BIGINT},#{roleId,jdbcType=BIGINT})
  </insert>


    <!--修改关联表的方法-->
    <update id="updateRoleIdByUserId" parameterType="java.util.HashMap">
    update t_authority_user_role
    set ROLE_ID = #{id,jdbcType=BIGINT}

    where USER_ID = #{id,jdbcType=BIGINT}
  </update>

    <!--删除 user role-->

    <delete id="deleteUserAndRole" parameterType="java.lang.Long">
    delete from t_authority_user_role
    where USER_ID = #{id,jdbcType=BIGINT}
  </delete>

    <!-- 根据用户关联查询role -->


    <select id="selectByPrimaryKeyResuMap" parameterType="java.lang.Long" resultType="java.util.Map">


        select u.*,r.name,r.id as roleId from t_authority_user u inner join t_authority_user_role ur

        on u.id = ur.USER_ID

        inner join t_authority_role r

        on ur.ROLE_ID = r.id

      where u.id = #{id,jdbcType=BIGINT}
  </select>




    <!--查询所有用户数据-->

    <select id="queryPageUsers" parameterType="java.util.Map" resultType="java.util.Map">


         select u.*,r.name,r.id as roleId
        from t_authority_user u inner join t_authority_user_role ur

        on u.id = ur.USER_ID

        inner join t_authority_role r

        on ur.ROLE_ID = r.id

        where 1 = 1

        <if test="userName != null and userName!='' ">
            and u.USER_NAME =  #{userName,jdbcType=VARCHAR}
        </if>

        <if test="roleName != null and roleName!='' ">
            and r.name =  #{roleName,jdbcType=VARCHAR}
        </if>

  </select>





</mapper>